---
- name: cloudflared group
  ansible.builtin.group:
    name: cloudflared
    state: present
    system: true

- name: cloudflared user
  ansible.builtin.user:
    name: cloudflared
    group: cloudflared
    system: true
    create_home: false

- name: create cloudflared directories
  ansible.builtin.file:
    owner: cloudflared
    group: cloudflared
    path: "{{ item }}"
    state: directory
    mode: "0750"
  with_items:
    - /opt/cloudflared
    - /opt/cloudflared/bin
    - /opt/cloudflared/config

- name: check cloudflared version
  ansible.builtin.slurp:
    src: /opt/cloudflared/version
  register: cloudflared_current_vesion
  changed_when: false
  ignore_errors: true

- name: install cloudflared
  when: cloudflared_current_vesion.failed or cloudflared_current_vesion['content'] | b64decode != cloudflared_version
  block:
    - name: download cloudflared
      ansible.builtin.get_url:
        url: "{{ cloudflared_url }}"
        dest: /opt/cloudflared/bin/cloudflared
        # checksum: "sha256:{{ cloudflared_checksum }}"
        mode: "0750"
        owner: cloudflared
        group: cloudflared
        setype: bin_t
        seuser: system_u

    - name: write version
      ansible.builtin.copy:
        content: "{{ cloudflared_version }}"
        dest: /opt/cloudflared/version
        owner: root
        group: root
        mode: "0644"

- name: create cloudflared service
  ansible.builtin.template:
    src: templates/cloudflared.service.j2
    dest: /usr/lib/systemd/system/cloudflared.service
    owner: root
    group: root
    mode: "0644"
  notify:
    - cloudflared daemon-reload

- ansible.builtin.include_tasks: provider-ec2.yml
  when: provider is defined and provider == "ec2"
  tags:
    - run-cloudflared
# - name: create directory for systemd drop-ins
#   ansible.builtin.file:
#     path: /etc/systemd/system/cloudflared.service.d
#     owner: root
#     group: root
#     state: directory
#     mode: 0755
